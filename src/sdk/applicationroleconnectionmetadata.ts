/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { applicationRoleConnectionMetadataDeleteUserConnection } from "../funcs/applicationRoleConnectionMetadataDeleteUserConnection.js";
import { applicationRoleConnectionMetadataList } from "../funcs/applicationRoleConnectionMetadataList.js";
import { applicationRoleConnectionMetadataUpdate } from "../funcs/applicationRoleConnectionMetadataUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class ApplicationRoleConnectionMetadata extends ClientSDK {
  /**
   * Deletes the application role connection for the user.
   */
  async deleteUserConnection(
    request: operations.DeleteApplicationUserRoleConnectionRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(applicationRoleConnectionMetadataDeleteUserConnection(
      this,
      request,
      options,
    ));
  }

  /**
   * Returns a list of application role connection metadata objects for the given application.
   */
  async list(
    request: operations.GetApplicationRoleConnectionsMetadataRequest,
    options?: RequestOptions,
  ): Promise<Array<components.ApplicationRoleConnectionsMetadataItemResponse>> {
    return unwrapAsync(applicationRoleConnectionMetadataList(
      this,
      request,
      options,
    ));
  }

  /**
   * Updates and returns a list of application role connection metadata objects for the given application. An application can have a maximum of 5 metadata records.
   */
  async update(
    request: operations.UpdateApplicationRoleConnectionsMetadataRequest,
    options?: RequestOptions,
  ): Promise<Array<components.ApplicationRoleConnectionsMetadataItemResponse>> {
    return unwrapAsync(applicationRoleConnectionMetadataUpdate(
      this,
      request,
      options,
    ));
  }
}
