/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { guildScheduledEventsCreate } from "../funcs/guildScheduledEventsCreate.js";
import { guildScheduledEventsDelete } from "../funcs/guildScheduledEventsDelete.js";
import { guildScheduledEventsGet } from "../funcs/guildScheduledEventsGet.js";
import { guildScheduledEventsGetUsers } from "../funcs/guildScheduledEventsGetUsers.js";
import { guildScheduledEventsList } from "../funcs/guildScheduledEventsList.js";
import { guildScheduledEventsUpdate } from "../funcs/guildScheduledEventsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class GuildScheduledEvents extends ClientSDK {
  /**
   * Returns a list of guild scheduled event objects for the given guild.
   */
  async list(
    request: operations.ListGuildScheduledEventsRequest,
    options?: RequestOptions,
  ): Promise<Array<operations.ListGuildScheduledEventsResponseBody>> {
    return unwrapAsync(guildScheduledEventsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create a guild scheduled event in the guild. Returns a guild scheduled event object on success. Fires a Guild Scheduled Event Create Gateway event.
   */
  async create(
    request: operations.CreateGuildScheduledEventRequest,
    options?: RequestOptions,
  ): Promise<operations.CreateGuildScheduledEventResponseBody> {
    return unwrapAsync(guildScheduledEventsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get a guild scheduled event. Returns a guild scheduled event object on success.
   */
  async get(
    request: operations.GetGuildScheduledEventRequest,
    options?: RequestOptions,
  ): Promise<operations.GetGuildScheduledEventResponseBody> {
    return unwrapAsync(guildScheduledEventsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a guild scheduled event. Returns a 204 on success. Fires a Guild Scheduled Event Delete Gateway event.
   */
  async delete(
    request: operations.DeleteGuildScheduledEventRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(guildScheduledEventsDelete(
      this,
      request,
      options,
    ));
  }

  /**
   * Modify a guild scheduled event. Returns the modified guild scheduled event object on success. Fires a Guild Scheduled Event Update Gateway event.
   */
  async update(
    request: operations.UpdateGuildScheduledEventRequest,
    options?: RequestOptions,
  ): Promise<operations.UpdateGuildScheduledEventResponseBody> {
    return unwrapAsync(guildScheduledEventsUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get a list of guild scheduled event users subscribed to a guild scheduled event. Returns a list of guild scheduled event user objects on success. Guild member data, if it exists, is included if the with_member query parameter is set.
   */
  async getUsers(
    request: operations.ListGuildScheduledEventUsersRequest,
    options?: RequestOptions,
  ): Promise<Array<components.ScheduledEventUserResponse>> {
    return unwrapAsync(guildScheduledEventsGetUsers(
      this,
      request,
      options,
    ));
  }
}
