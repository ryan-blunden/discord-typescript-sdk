/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { invitesDelete } from "../funcs/invitesDelete.js";
import { invitesGet } from "../funcs/invitesGet.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Invites extends ClientSDK {
  /**
   * Returns an invite object for the given code.
   */
  async get(
    request: operations.InviteResolveRequest,
    security?: operations.InviteResolveSecurity | undefined,
    options?: RequestOptions,
  ): Promise<operations.InviteResolveResponseBody> {
    return unwrapAsync(invitesGet(
      this,
      request,
      security,
      options,
    ));
  }

  /**
   * Delete an invite. Requires the MANAGE_CHANNELS permission on the channel this invite belongs to, or MANAGE_GUILD to remove any invite across the guild. Returns an invite object on success.
   */
  async delete(
    request: operations.InviteRevokeRequest,
    options?: RequestOptions,
  ): Promise<operations.InviteRevokeResponseBody> {
    return unwrapAsync(invitesDelete(
      this,
      request,
      options,
    ));
  }
}
