/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { soundboardsCreateGuildSoundboardSound } from "../funcs/soundboardsCreateGuildSoundboardSound.js";
import { soundboardsDeleteGuildSoundboardSound } from "../funcs/soundboardsDeleteGuildSoundboardSound.js";
import { soundboardsGetGuildSoundboardSound } from "../funcs/soundboardsGetGuildSoundboardSound.js";
import { soundboardsGetSoundboardDefaultSounds } from "../funcs/soundboardsGetSoundboardDefaultSounds.js";
import { soundboardsListGuildSoundboardSounds } from "../funcs/soundboardsListGuildSoundboardSounds.js";
import { soundboardsSendSoundboardSound } from "../funcs/soundboardsSendSoundboardSound.js";
import { soundboardsUpdateGuildSoundboardSound } from "../funcs/soundboardsUpdateGuildSoundboardSound.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Soundboards extends ClientSDK {
  /**
   * Sends a soundboard sound to a channel.
   */
  async sendSoundboardSound(
    request: operations.SendSoundboardSoundRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(soundboardsSendSoundboardSound(
      this,
      request,
      options,
    ));
  }

  /**
   * Returns a list of soundboard sound objects for the given guild.
   */
  async listGuildSoundboardSounds(
    request: operations.ListGuildSoundboardSoundsRequest,
    options?: RequestOptions,
  ): Promise<components.ListGuildSoundboardSoundsResponse> {
    return unwrapAsync(soundboardsListGuildSoundboardSounds(
      this,
      request,
      options,
    ));
  }

  /**
   * Create a new soundboard sound for the guild. Returns the new soundboard sound object on success.
   */
  async createGuildSoundboardSound(
    request: operations.CreateGuildSoundboardSoundRequest,
    options?: RequestOptions,
  ): Promise<components.SoundboardSoundResponse> {
    return unwrapAsync(soundboardsCreateGuildSoundboardSound(
      this,
      request,
      options,
    ));
  }

  /**
   * Returns a soundboard sound object for the given guild and sound IDs.
   */
  async getGuildSoundboardSound(
    request: operations.GetGuildSoundboardSoundRequest,
    options?: RequestOptions,
  ): Promise<components.SoundboardSoundResponse> {
    return unwrapAsync(soundboardsGetGuildSoundboardSound(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a soundboard sound from a guild. Returns 204 No Content on success.
   */
  async deleteGuildSoundboardSound(
    request: operations.DeleteGuildSoundboardSoundRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(soundboardsDeleteGuildSoundboardSound(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a soundboard sound in a guild. Returns the updated soundboard sound object on success.
   */
  async updateGuildSoundboardSound(
    request: operations.UpdateGuildSoundboardSoundRequest,
    options?: RequestOptions,
  ): Promise<components.SoundboardSoundResponse> {
    return unwrapAsync(soundboardsUpdateGuildSoundboardSound(
      this,
      request,
      options,
    ));
  }

  /**
   * Returns a list of the default sounds available in the soundboard.
   */
  async getSoundboardDefaultSounds(
    options?: RequestOptions,
  ): Promise<Array<components.SoundboardSoundResponse>> {
    return unwrapAsync(soundboardsGetSoundboardDefaultSounds(
      this,
      options,
    ));
  }
}
