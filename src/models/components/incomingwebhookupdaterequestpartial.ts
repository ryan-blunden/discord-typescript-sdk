/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ActionRowComponentForMessageRequest,
  ActionRowComponentForMessageRequest$inboundSchema,
  ActionRowComponentForMessageRequest$Outbound,
  ActionRowComponentForMessageRequest$outboundSchema,
} from "./actionrowcomponentformessagerequest.js";
import {
  ContainerComponentForMessageRequest,
  ContainerComponentForMessageRequest$inboundSchema,
  ContainerComponentForMessageRequest$Outbound,
  ContainerComponentForMessageRequest$outboundSchema,
} from "./containercomponentformessagerequest.js";
import {
  FileComponentForMessageRequest,
  FileComponentForMessageRequest$inboundSchema,
  FileComponentForMessageRequest$Outbound,
  FileComponentForMessageRequest$outboundSchema,
} from "./filecomponentformessagerequest.js";
import {
  MediaGalleryComponentForMessageRequest,
  MediaGalleryComponentForMessageRequest$inboundSchema,
  MediaGalleryComponentForMessageRequest$Outbound,
  MediaGalleryComponentForMessageRequest$outboundSchema,
} from "./mediagallerycomponentformessagerequest.js";
import {
  MessageAllowedMentionsRequest,
  MessageAllowedMentionsRequest$inboundSchema,
  MessageAllowedMentionsRequest$Outbound,
  MessageAllowedMentionsRequest$outboundSchema,
} from "./messageallowedmentionsrequest.js";
import {
  MessageAttachmentRequest,
  MessageAttachmentRequest$inboundSchema,
  MessageAttachmentRequest$Outbound,
  MessageAttachmentRequest$outboundSchema,
} from "./messageattachmentrequest.js";
import {
  PollCreateRequest,
  PollCreateRequest$inboundSchema,
  PollCreateRequest$Outbound,
  PollCreateRequest$outboundSchema,
} from "./pollcreaterequest.js";
import {
  RichEmbed,
  RichEmbed$inboundSchema,
  RichEmbed$Outbound,
  RichEmbed$outboundSchema,
} from "./richembed.js";
import {
  SectionComponentForMessageRequest,
  SectionComponentForMessageRequest$inboundSchema,
  SectionComponentForMessageRequest$Outbound,
  SectionComponentForMessageRequest$outboundSchema,
} from "./sectioncomponentformessagerequest.js";
import {
  SeparatorComponentForMessageRequest,
  SeparatorComponentForMessageRequest$inboundSchema,
  SeparatorComponentForMessageRequest$Outbound,
  SeparatorComponentForMessageRequest$outboundSchema,
} from "./separatorcomponentformessagerequest.js";
import {
  TextDisplayComponentForMessageRequest,
  TextDisplayComponentForMessageRequest$inboundSchema,
  TextDisplayComponentForMessageRequest$Outbound,
  TextDisplayComponentForMessageRequest$outboundSchema,
} from "./textdisplaycomponentformessagerequest.js";

export type IncomingWebhookUpdateRequestPartialComponents =
  | ActionRowComponentForMessageRequest
  | MediaGalleryComponentForMessageRequest
  | TextDisplayComponentForMessageRequest
  | FileComponentForMessageRequest
  | SectionComponentForMessageRequest
  | SeparatorComponentForMessageRequest
  | ContainerComponentForMessageRequest;

export type IncomingWebhookUpdateRequestPartial = {
  content?: string | null | undefined;
  embeds?: Array<RichEmbed> | null | undefined;
  allowedMentions?: MessageAllowedMentionsRequest | null | undefined;
  components?:
    | Array<
      | ActionRowComponentForMessageRequest
      | MediaGalleryComponentForMessageRequest
      | TextDisplayComponentForMessageRequest
      | FileComponentForMessageRequest
      | SectionComponentForMessageRequest
      | SeparatorComponentForMessageRequest
      | ContainerComponentForMessageRequest
    >
    | null
    | undefined;
  attachments?: Array<MessageAttachmentRequest> | null | undefined;
  poll?: PollCreateRequest | null | undefined;
  flags?: number | null | undefined;
};

/** @internal */
export const IncomingWebhookUpdateRequestPartialComponents$inboundSchema:
  z.ZodType<
    IncomingWebhookUpdateRequestPartialComponents,
    z.ZodTypeDef,
    unknown
  > = z.union([
    ActionRowComponentForMessageRequest$inboundSchema,
    MediaGalleryComponentForMessageRequest$inboundSchema,
    TextDisplayComponentForMessageRequest$inboundSchema,
    FileComponentForMessageRequest$inboundSchema,
    SectionComponentForMessageRequest$inboundSchema,
    SeparatorComponentForMessageRequest$inboundSchema,
    ContainerComponentForMessageRequest$inboundSchema,
  ]);

/** @internal */
export type IncomingWebhookUpdateRequestPartialComponents$Outbound =
  | ActionRowComponentForMessageRequest$Outbound
  | MediaGalleryComponentForMessageRequest$Outbound
  | TextDisplayComponentForMessageRequest$Outbound
  | FileComponentForMessageRequest$Outbound
  | SectionComponentForMessageRequest$Outbound
  | SeparatorComponentForMessageRequest$Outbound
  | ContainerComponentForMessageRequest$Outbound;

/** @internal */
export const IncomingWebhookUpdateRequestPartialComponents$outboundSchema:
  z.ZodType<
    IncomingWebhookUpdateRequestPartialComponents$Outbound,
    z.ZodTypeDef,
    IncomingWebhookUpdateRequestPartialComponents
  > = z.union([
    ActionRowComponentForMessageRequest$outboundSchema,
    MediaGalleryComponentForMessageRequest$outboundSchema,
    TextDisplayComponentForMessageRequest$outboundSchema,
    FileComponentForMessageRequest$outboundSchema,
    SectionComponentForMessageRequest$outboundSchema,
    SeparatorComponentForMessageRequest$outboundSchema,
    ContainerComponentForMessageRequest$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IncomingWebhookUpdateRequestPartialComponents$ {
  /** @deprecated use `IncomingWebhookUpdateRequestPartialComponents$inboundSchema` instead. */
  export const inboundSchema =
    IncomingWebhookUpdateRequestPartialComponents$inboundSchema;
  /** @deprecated use `IncomingWebhookUpdateRequestPartialComponents$outboundSchema` instead. */
  export const outboundSchema =
    IncomingWebhookUpdateRequestPartialComponents$outboundSchema;
  /** @deprecated use `IncomingWebhookUpdateRequestPartialComponents$Outbound` instead. */
  export type Outbound = IncomingWebhookUpdateRequestPartialComponents$Outbound;
}

export function incomingWebhookUpdateRequestPartialComponentsToJSON(
  incomingWebhookUpdateRequestPartialComponents:
    IncomingWebhookUpdateRequestPartialComponents,
): string {
  return JSON.stringify(
    IncomingWebhookUpdateRequestPartialComponents$outboundSchema.parse(
      incomingWebhookUpdateRequestPartialComponents,
    ),
  );
}

export function incomingWebhookUpdateRequestPartialComponentsFromJSON(
  jsonString: string,
): SafeParseResult<
  IncomingWebhookUpdateRequestPartialComponents,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      IncomingWebhookUpdateRequestPartialComponents$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'IncomingWebhookUpdateRequestPartialComponents' from JSON`,
  );
}

/** @internal */
export const IncomingWebhookUpdateRequestPartial$inboundSchema: z.ZodType<
  IncomingWebhookUpdateRequestPartial,
  z.ZodTypeDef,
  unknown
> = z.object({
  content: z.nullable(z.string()).optional(),
  embeds: z.nullable(z.array(RichEmbed$inboundSchema)).optional(),
  allowed_mentions: z.nullable(MessageAllowedMentionsRequest$inboundSchema)
    .optional(),
  components: z.nullable(
    z.array(
      z.union([
        ActionRowComponentForMessageRequest$inboundSchema,
        MediaGalleryComponentForMessageRequest$inboundSchema,
        TextDisplayComponentForMessageRequest$inboundSchema,
        FileComponentForMessageRequest$inboundSchema,
        SectionComponentForMessageRequest$inboundSchema,
        SeparatorComponentForMessageRequest$inboundSchema,
        ContainerComponentForMessageRequest$inboundSchema,
      ]),
    ),
  ).optional(),
  attachments: z.nullable(z.array(MessageAttachmentRequest$inboundSchema))
    .optional(),
  poll: z.nullable(PollCreateRequest$inboundSchema).optional(),
  flags: z.nullable(z.number().int()).optional(),
}).transform((v) => {
  return remap$(v, {
    "allowed_mentions": "allowedMentions",
  });
});

/** @internal */
export type IncomingWebhookUpdateRequestPartial$Outbound = {
  content?: string | null | undefined;
  embeds?: Array<RichEmbed$Outbound> | null | undefined;
  allowed_mentions?: MessageAllowedMentionsRequest$Outbound | null | undefined;
  components?:
    | Array<
      | ActionRowComponentForMessageRequest$Outbound
      | MediaGalleryComponentForMessageRequest$Outbound
      | TextDisplayComponentForMessageRequest$Outbound
      | FileComponentForMessageRequest$Outbound
      | SectionComponentForMessageRequest$Outbound
      | SeparatorComponentForMessageRequest$Outbound
      | ContainerComponentForMessageRequest$Outbound
    >
    | null
    | undefined;
  attachments?: Array<MessageAttachmentRequest$Outbound> | null | undefined;
  poll?: PollCreateRequest$Outbound | null | undefined;
  flags?: number | null | undefined;
};

/** @internal */
export const IncomingWebhookUpdateRequestPartial$outboundSchema: z.ZodType<
  IncomingWebhookUpdateRequestPartial$Outbound,
  z.ZodTypeDef,
  IncomingWebhookUpdateRequestPartial
> = z.object({
  content: z.nullable(z.string()).optional(),
  embeds: z.nullable(z.array(RichEmbed$outboundSchema)).optional(),
  allowedMentions: z.nullable(MessageAllowedMentionsRequest$outboundSchema)
    .optional(),
  components: z.nullable(
    z.array(
      z.union([
        ActionRowComponentForMessageRequest$outboundSchema,
        MediaGalleryComponentForMessageRequest$outboundSchema,
        TextDisplayComponentForMessageRequest$outboundSchema,
        FileComponentForMessageRequest$outboundSchema,
        SectionComponentForMessageRequest$outboundSchema,
        SeparatorComponentForMessageRequest$outboundSchema,
        ContainerComponentForMessageRequest$outboundSchema,
      ]),
    ),
  ).optional(),
  attachments: z.nullable(z.array(MessageAttachmentRequest$outboundSchema))
    .optional(),
  poll: z.nullable(PollCreateRequest$outboundSchema).optional(),
  flags: z.nullable(z.number().int()).optional(),
}).transform((v) => {
  return remap$(v, {
    allowedMentions: "allowed_mentions",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IncomingWebhookUpdateRequestPartial$ {
  /** @deprecated use `IncomingWebhookUpdateRequestPartial$inboundSchema` instead. */
  export const inboundSchema =
    IncomingWebhookUpdateRequestPartial$inboundSchema;
  /** @deprecated use `IncomingWebhookUpdateRequestPartial$outboundSchema` instead. */
  export const outboundSchema =
    IncomingWebhookUpdateRequestPartial$outboundSchema;
  /** @deprecated use `IncomingWebhookUpdateRequestPartial$Outbound` instead. */
  export type Outbound = IncomingWebhookUpdateRequestPartial$Outbound;
}

export function incomingWebhookUpdateRequestPartialToJSON(
  incomingWebhookUpdateRequestPartial: IncomingWebhookUpdateRequestPartial,
): string {
  return JSON.stringify(
    IncomingWebhookUpdateRequestPartial$outboundSchema.parse(
      incomingWebhookUpdateRequestPartial,
    ),
  );
}

export function incomingWebhookUpdateRequestPartialFromJSON(
  jsonString: string,
): SafeParseResult<IncomingWebhookUpdateRequestPartial, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      IncomingWebhookUpdateRequestPartial$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'IncomingWebhookUpdateRequestPartial' from JSON`,
  );
}
