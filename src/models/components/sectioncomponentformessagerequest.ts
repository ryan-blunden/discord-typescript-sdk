/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ButtonComponentForMessageRequest,
  ButtonComponentForMessageRequest$inboundSchema,
  ButtonComponentForMessageRequest$Outbound,
  ButtonComponentForMessageRequest$outboundSchema,
} from "./buttoncomponentformessagerequest.js";
import {
  TextDisplayComponentForMessageRequest,
  TextDisplayComponentForMessageRequest$inboundSchema,
  TextDisplayComponentForMessageRequest$Outbound,
  TextDisplayComponentForMessageRequest$outboundSchema,
} from "./textdisplaycomponentformessagerequest.js";
import {
  ThumbnailComponentForMessageRequest,
  ThumbnailComponentForMessageRequest$inboundSchema,
  ThumbnailComponentForMessageRequest$Outbound,
  ThumbnailComponentForMessageRequest$outboundSchema,
} from "./thumbnailcomponentformessagerequest.js";

export type SectionComponentForMessageRequestAccessory =
  | ThumbnailComponentForMessageRequest
  | ButtonComponentForMessageRequest;

export type SectionComponentForMessageRequest = {
  type?: 1 | undefined;
  components: Array<TextDisplayComponentForMessageRequest>;
  accessory:
    | ThumbnailComponentForMessageRequest
    | ButtonComponentForMessageRequest;
};

/** @internal */
export const SectionComponentForMessageRequestAccessory$inboundSchema:
  z.ZodType<SectionComponentForMessageRequestAccessory, z.ZodTypeDef, unknown> =
    z.union([
      ThumbnailComponentForMessageRequest$inboundSchema,
      ButtonComponentForMessageRequest$inboundSchema,
    ]);

/** @internal */
export type SectionComponentForMessageRequestAccessory$Outbound =
  | ThumbnailComponentForMessageRequest$Outbound
  | ButtonComponentForMessageRequest$Outbound;

/** @internal */
export const SectionComponentForMessageRequestAccessory$outboundSchema:
  z.ZodType<
    SectionComponentForMessageRequestAccessory$Outbound,
    z.ZodTypeDef,
    SectionComponentForMessageRequestAccessory
  > = z.union([
    ThumbnailComponentForMessageRequest$outboundSchema,
    ButtonComponentForMessageRequest$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SectionComponentForMessageRequestAccessory$ {
  /** @deprecated use `SectionComponentForMessageRequestAccessory$inboundSchema` instead. */
  export const inboundSchema =
    SectionComponentForMessageRequestAccessory$inboundSchema;
  /** @deprecated use `SectionComponentForMessageRequestAccessory$outboundSchema` instead. */
  export const outboundSchema =
    SectionComponentForMessageRequestAccessory$outboundSchema;
  /** @deprecated use `SectionComponentForMessageRequestAccessory$Outbound` instead. */
  export type Outbound = SectionComponentForMessageRequestAccessory$Outbound;
}

export function sectionComponentForMessageRequestAccessoryToJSON(
  sectionComponentForMessageRequestAccessory:
    SectionComponentForMessageRequestAccessory,
): string {
  return JSON.stringify(
    SectionComponentForMessageRequestAccessory$outboundSchema.parse(
      sectionComponentForMessageRequestAccessory,
    ),
  );
}

export function sectionComponentForMessageRequestAccessoryFromJSON(
  jsonString: string,
): SafeParseResult<
  SectionComponentForMessageRequestAccessory,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      SectionComponentForMessageRequestAccessory$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'SectionComponentForMessageRequestAccessory' from JSON`,
  );
}

/** @internal */
export const SectionComponentForMessageRequest$inboundSchema: z.ZodType<
  SectionComponentForMessageRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.literal(1).optional(),
  components: z.array(TextDisplayComponentForMessageRequest$inboundSchema),
  accessory: z.union([
    ThumbnailComponentForMessageRequest$inboundSchema,
    ButtonComponentForMessageRequest$inboundSchema,
  ]),
});

/** @internal */
export type SectionComponentForMessageRequest$Outbound = {
  type: 1;
  components: Array<TextDisplayComponentForMessageRequest$Outbound>;
  accessory:
    | ThumbnailComponentForMessageRequest$Outbound
    | ButtonComponentForMessageRequest$Outbound;
};

/** @internal */
export const SectionComponentForMessageRequest$outboundSchema: z.ZodType<
  SectionComponentForMessageRequest$Outbound,
  z.ZodTypeDef,
  SectionComponentForMessageRequest
> = z.object({
  type: z.literal(1).default(1 as const),
  components: z.array(TextDisplayComponentForMessageRequest$outboundSchema),
  accessory: z.union([
    ThumbnailComponentForMessageRequest$outboundSchema,
    ButtonComponentForMessageRequest$outboundSchema,
  ]),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SectionComponentForMessageRequest$ {
  /** @deprecated use `SectionComponentForMessageRequest$inboundSchema` instead. */
  export const inboundSchema = SectionComponentForMessageRequest$inboundSchema;
  /** @deprecated use `SectionComponentForMessageRequest$outboundSchema` instead. */
  export const outboundSchema =
    SectionComponentForMessageRequest$outboundSchema;
  /** @deprecated use `SectionComponentForMessageRequest$Outbound` instead. */
  export type Outbound = SectionComponentForMessageRequest$Outbound;
}

export function sectionComponentForMessageRequestToJSON(
  sectionComponentForMessageRequest: SectionComponentForMessageRequest,
): string {
  return JSON.stringify(
    SectionComponentForMessageRequest$outboundSchema.parse(
      sectionComponentForMessageRequest,
    ),
  );
}

export function sectionComponentForMessageRequestFromJSON(
  jsonString: string,
): SafeParseResult<SectionComponentForMessageRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SectionComponentForMessageRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SectionComponentForMessageRequest' from JSON`,
  );
}
