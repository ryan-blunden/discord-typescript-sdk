/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  UnfurledMediaResponse,
  UnfurledMediaResponse$inboundSchema,
  UnfurledMediaResponse$Outbound,
  UnfurledMediaResponse$outboundSchema,
} from "./unfurledmediaresponse.js";

export type ThumbnailComponentResponse = {
  type?: 1 | undefined;
  id: number;
  media: UnfurledMediaResponse;
  description?: string | null | undefined;
  spoiler: boolean;
};

/** @internal */
export const ThumbnailComponentResponse$inboundSchema: z.ZodType<
  ThumbnailComponentResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.literal(1).optional(),
  id: z.number().int(),
  media: UnfurledMediaResponse$inboundSchema,
  description: z.nullable(z.string()).optional(),
  spoiler: z.boolean(),
});

/** @internal */
export type ThumbnailComponentResponse$Outbound = {
  type: 1;
  id: number;
  media: UnfurledMediaResponse$Outbound;
  description?: string | null | undefined;
  spoiler: boolean;
};

/** @internal */
export const ThumbnailComponentResponse$outboundSchema: z.ZodType<
  ThumbnailComponentResponse$Outbound,
  z.ZodTypeDef,
  ThumbnailComponentResponse
> = z.object({
  type: z.literal(1).default(1 as const),
  id: z.number().int(),
  media: UnfurledMediaResponse$outboundSchema,
  description: z.nullable(z.string()).optional(),
  spoiler: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ThumbnailComponentResponse$ {
  /** @deprecated use `ThumbnailComponentResponse$inboundSchema` instead. */
  export const inboundSchema = ThumbnailComponentResponse$inboundSchema;
  /** @deprecated use `ThumbnailComponentResponse$outboundSchema` instead. */
  export const outboundSchema = ThumbnailComponentResponse$outboundSchema;
  /** @deprecated use `ThumbnailComponentResponse$Outbound` instead. */
  export type Outbound = ThumbnailComponentResponse$Outbound;
}

export function thumbnailComponentResponseToJSON(
  thumbnailComponentResponse: ThumbnailComponentResponse,
): string {
  return JSON.stringify(
    ThumbnailComponentResponse$outboundSchema.parse(thumbnailComponentResponse),
  );
}

export function thumbnailComponentResponseFromJSON(
  jsonString: string,
): SafeParseResult<ThumbnailComponentResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ThumbnailComponentResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ThumbnailComponentResponse' from JSON`,
  );
}
