/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  UserResponse,
  UserResponse$inboundSchema,
  UserResponse$Outbound,
  UserResponse$outboundSchema,
} from "./userresponse.js";

/**
 * Channel types (1: DM, 3: GROUP_DM, 0: GUILD_TEXT, 2: GUILD_VOICE, 4: GUILD_CATEGORY, 5: GUILD_ANNOUNCEMENT, 7: UNKNOWN, 10: ANNOUNCEMENT_THREAD, 11: PUBLIC_THREAD, 12: PRIVATE_THREAD, 13: GUILD_STAGE_VOICE, 14: GUILD_DIRECTORY, 15: GUILD_FORUM)
 */
export const PrivateGroupChannelResponseType = {
  Zero: 0,
  One: 1,
  Two: 2,
  Three: 3,
  Four: 4,
  Five: 5,
  Seven: 7,
  Ten: 10,
  Eleven: 11,
  Twelve: 12,
  Thirteen: 13,
  Fourteen: 14,
  Fifteen: 15,
} as const;
/**
 * Channel types (1: DM, 3: GROUP_DM, 0: GUILD_TEXT, 2: GUILD_VOICE, 4: GUILD_CATEGORY, 5: GUILD_ANNOUNCEMENT, 7: UNKNOWN, 10: ANNOUNCEMENT_THREAD, 11: PUBLIC_THREAD, 12: PRIVATE_THREAD, 13: GUILD_STAGE_VOICE, 14: GUILD_DIRECTORY, 15: GUILD_FORUM)
 */
export type PrivateGroupChannelResponseType = ClosedEnum<
  typeof PrivateGroupChannelResponseType
>;

export type PrivateGroupChannelResponse = {
  id: string;
  type: PrivateGroupChannelResponseType;
  lastMessageId?: string | null | undefined;
  flags: number;
  lastPinTimestamp?: Date | null | undefined;
  recipients: Array<UserResponse>;
  name?: string | null | undefined;
  icon?: string | null | undefined;
  ownerId?: string | null | undefined;
  managed?: boolean | null | undefined;
  applicationId?: string | null | undefined;
};

/** @internal */
export const PrivateGroupChannelResponseType$inboundSchema: z.ZodNativeEnum<
  typeof PrivateGroupChannelResponseType
> = z.nativeEnum(PrivateGroupChannelResponseType);

/** @internal */
export const PrivateGroupChannelResponseType$outboundSchema: z.ZodNativeEnum<
  typeof PrivateGroupChannelResponseType
> = PrivateGroupChannelResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PrivateGroupChannelResponseType$ {
  /** @deprecated use `PrivateGroupChannelResponseType$inboundSchema` instead. */
  export const inboundSchema = PrivateGroupChannelResponseType$inboundSchema;
  /** @deprecated use `PrivateGroupChannelResponseType$outboundSchema` instead. */
  export const outboundSchema = PrivateGroupChannelResponseType$outboundSchema;
}

/** @internal */
export const PrivateGroupChannelResponse$inboundSchema: z.ZodType<
  PrivateGroupChannelResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  type: PrivateGroupChannelResponseType$inboundSchema,
  last_message_id: z.nullable(z.string()).optional(),
  flags: z.number().int(),
  last_pin_timestamp: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  recipients: z.array(UserResponse$inboundSchema),
  name: z.nullable(z.string()).optional(),
  icon: z.nullable(z.string()).optional(),
  owner_id: z.nullable(z.string()).optional(),
  managed: z.nullable(z.boolean()).optional(),
  application_id: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "last_message_id": "lastMessageId",
    "last_pin_timestamp": "lastPinTimestamp",
    "owner_id": "ownerId",
    "application_id": "applicationId",
  });
});

/** @internal */
export type PrivateGroupChannelResponse$Outbound = {
  id: string;
  type: number;
  last_message_id?: string | null | undefined;
  flags: number;
  last_pin_timestamp?: string | null | undefined;
  recipients: Array<UserResponse$Outbound>;
  name?: string | null | undefined;
  icon?: string | null | undefined;
  owner_id?: string | null | undefined;
  managed?: boolean | null | undefined;
  application_id?: string | null | undefined;
};

/** @internal */
export const PrivateGroupChannelResponse$outboundSchema: z.ZodType<
  PrivateGroupChannelResponse$Outbound,
  z.ZodTypeDef,
  PrivateGroupChannelResponse
> = z.object({
  id: z.string(),
  type: PrivateGroupChannelResponseType$outboundSchema,
  lastMessageId: z.nullable(z.string()).optional(),
  flags: z.number().int(),
  lastPinTimestamp: z.nullable(z.date().transform(v => v.toISOString()))
    .optional(),
  recipients: z.array(UserResponse$outboundSchema),
  name: z.nullable(z.string()).optional(),
  icon: z.nullable(z.string()).optional(),
  ownerId: z.nullable(z.string()).optional(),
  managed: z.nullable(z.boolean()).optional(),
  applicationId: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    lastMessageId: "last_message_id",
    lastPinTimestamp: "last_pin_timestamp",
    ownerId: "owner_id",
    applicationId: "application_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PrivateGroupChannelResponse$ {
  /** @deprecated use `PrivateGroupChannelResponse$inboundSchema` instead. */
  export const inboundSchema = PrivateGroupChannelResponse$inboundSchema;
  /** @deprecated use `PrivateGroupChannelResponse$outboundSchema` instead. */
  export const outboundSchema = PrivateGroupChannelResponse$outboundSchema;
  /** @deprecated use `PrivateGroupChannelResponse$Outbound` instead. */
  export type Outbound = PrivateGroupChannelResponse$Outbound;
}

export function privateGroupChannelResponseToJSON(
  privateGroupChannelResponse: PrivateGroupChannelResponse,
): string {
  return JSON.stringify(
    PrivateGroupChannelResponse$outboundSchema.parse(
      privateGroupChannelResponse,
    ),
  );
}

export function privateGroupChannelResponseFromJSON(
  jsonString: string,
): SafeParseResult<PrivateGroupChannelResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PrivateGroupChannelResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PrivateGroupChannelResponse' from JSON`,
  );
}
