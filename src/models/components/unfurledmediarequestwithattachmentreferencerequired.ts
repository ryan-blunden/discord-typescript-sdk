/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UnfurledMediaRequestWithAttachmentReferenceRequired = {
  url: string;
};

/** @internal */
export const UnfurledMediaRequestWithAttachmentReferenceRequired$inboundSchema:
  z.ZodType<
    UnfurledMediaRequestWithAttachmentReferenceRequired,
    z.ZodTypeDef,
    unknown
  > = z.object({
    url: z.string(),
  });

/** @internal */
export type UnfurledMediaRequestWithAttachmentReferenceRequired$Outbound = {
  url: string;
};

/** @internal */
export const UnfurledMediaRequestWithAttachmentReferenceRequired$outboundSchema:
  z.ZodType<
    UnfurledMediaRequestWithAttachmentReferenceRequired$Outbound,
    z.ZodTypeDef,
    UnfurledMediaRequestWithAttachmentReferenceRequired
  > = z.object({
    url: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnfurledMediaRequestWithAttachmentReferenceRequired$ {
  /** @deprecated use `UnfurledMediaRequestWithAttachmentReferenceRequired$inboundSchema` instead. */
  export const inboundSchema =
    UnfurledMediaRequestWithAttachmentReferenceRequired$inboundSchema;
  /** @deprecated use `UnfurledMediaRequestWithAttachmentReferenceRequired$outboundSchema` instead. */
  export const outboundSchema =
    UnfurledMediaRequestWithAttachmentReferenceRequired$outboundSchema;
  /** @deprecated use `UnfurledMediaRequestWithAttachmentReferenceRequired$Outbound` instead. */
  export type Outbound =
    UnfurledMediaRequestWithAttachmentReferenceRequired$Outbound;
}

export function unfurledMediaRequestWithAttachmentReferenceRequiredToJSON(
  unfurledMediaRequestWithAttachmentReferenceRequired:
    UnfurledMediaRequestWithAttachmentReferenceRequired,
): string {
  return JSON.stringify(
    UnfurledMediaRequestWithAttachmentReferenceRequired$outboundSchema.parse(
      unfurledMediaRequestWithAttachmentReferenceRequired,
    ),
  );
}

export function unfurledMediaRequestWithAttachmentReferenceRequiredFromJSON(
  jsonString: string,
): SafeParseResult<
  UnfurledMediaRequestWithAttachmentReferenceRequired,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UnfurledMediaRequestWithAttachmentReferenceRequired$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UnfurledMediaRequestWithAttachmentReferenceRequired' from JSON`,
  );
}
