/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ActionRowComponentForMessageRequest,
  ActionRowComponentForMessageRequest$inboundSchema,
  ActionRowComponentForMessageRequest$Outbound,
  ActionRowComponentForMessageRequest$outboundSchema,
} from "./actionrowcomponentformessagerequest.js";
import {
  FileComponentForMessageRequest,
  FileComponentForMessageRequest$inboundSchema,
  FileComponentForMessageRequest$Outbound,
  FileComponentForMessageRequest$outboundSchema,
} from "./filecomponentformessagerequest.js";
import {
  MediaGalleryComponentForMessageRequest,
  MediaGalleryComponentForMessageRequest$inboundSchema,
  MediaGalleryComponentForMessageRequest$Outbound,
  MediaGalleryComponentForMessageRequest$outboundSchema,
} from "./mediagallerycomponentformessagerequest.js";
import {
  SectionComponentForMessageRequest,
  SectionComponentForMessageRequest$inboundSchema,
  SectionComponentForMessageRequest$Outbound,
  SectionComponentForMessageRequest$outboundSchema,
} from "./sectioncomponentformessagerequest.js";
import {
  SeparatorComponentForMessageRequest,
  SeparatorComponentForMessageRequest$inboundSchema,
  SeparatorComponentForMessageRequest$Outbound,
  SeparatorComponentForMessageRequest$outboundSchema,
} from "./separatorcomponentformessagerequest.js";
import {
  TextDisplayComponentForMessageRequest,
  TextDisplayComponentForMessageRequest$inboundSchema,
  TextDisplayComponentForMessageRequest$Outbound,
  TextDisplayComponentForMessageRequest$outboundSchema,
} from "./textdisplaycomponentformessagerequest.js";

export type ContainerComponentForMessageRequestComponents =
  | ActionRowComponentForMessageRequest
  | MediaGalleryComponentForMessageRequest
  | TextDisplayComponentForMessageRequest
  | FileComponentForMessageRequest
  | SectionComponentForMessageRequest
  | SeparatorComponentForMessageRequest;

export type ContainerComponentForMessageRequest = {
  type?: 1 | undefined;
  accentColor?: number | null | undefined;
  components: Array<
    | ActionRowComponentForMessageRequest
    | MediaGalleryComponentForMessageRequest
    | TextDisplayComponentForMessageRequest
    | FileComponentForMessageRequest
    | SectionComponentForMessageRequest
    | SeparatorComponentForMessageRequest
  >;
  spoiler?: boolean | null | undefined;
};

/** @internal */
export const ContainerComponentForMessageRequestComponents$inboundSchema:
  z.ZodType<
    ContainerComponentForMessageRequestComponents,
    z.ZodTypeDef,
    unknown
  > = z.union([
    ActionRowComponentForMessageRequest$inboundSchema,
    MediaGalleryComponentForMessageRequest$inboundSchema,
    TextDisplayComponentForMessageRequest$inboundSchema,
    FileComponentForMessageRequest$inboundSchema,
    SectionComponentForMessageRequest$inboundSchema,
    SeparatorComponentForMessageRequest$inboundSchema,
  ]);

/** @internal */
export type ContainerComponentForMessageRequestComponents$Outbound =
  | ActionRowComponentForMessageRequest$Outbound
  | MediaGalleryComponentForMessageRequest$Outbound
  | TextDisplayComponentForMessageRequest$Outbound
  | FileComponentForMessageRequest$Outbound
  | SectionComponentForMessageRequest$Outbound
  | SeparatorComponentForMessageRequest$Outbound;

/** @internal */
export const ContainerComponentForMessageRequestComponents$outboundSchema:
  z.ZodType<
    ContainerComponentForMessageRequestComponents$Outbound,
    z.ZodTypeDef,
    ContainerComponentForMessageRequestComponents
  > = z.union([
    ActionRowComponentForMessageRequest$outboundSchema,
    MediaGalleryComponentForMessageRequest$outboundSchema,
    TextDisplayComponentForMessageRequest$outboundSchema,
    FileComponentForMessageRequest$outboundSchema,
    SectionComponentForMessageRequest$outboundSchema,
    SeparatorComponentForMessageRequest$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ContainerComponentForMessageRequestComponents$ {
  /** @deprecated use `ContainerComponentForMessageRequestComponents$inboundSchema` instead. */
  export const inboundSchema =
    ContainerComponentForMessageRequestComponents$inboundSchema;
  /** @deprecated use `ContainerComponentForMessageRequestComponents$outboundSchema` instead. */
  export const outboundSchema =
    ContainerComponentForMessageRequestComponents$outboundSchema;
  /** @deprecated use `ContainerComponentForMessageRequestComponents$Outbound` instead. */
  export type Outbound = ContainerComponentForMessageRequestComponents$Outbound;
}

export function containerComponentForMessageRequestComponentsToJSON(
  containerComponentForMessageRequestComponents:
    ContainerComponentForMessageRequestComponents,
): string {
  return JSON.stringify(
    ContainerComponentForMessageRequestComponents$outboundSchema.parse(
      containerComponentForMessageRequestComponents,
    ),
  );
}

export function containerComponentForMessageRequestComponentsFromJSON(
  jsonString: string,
): SafeParseResult<
  ContainerComponentForMessageRequestComponents,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ContainerComponentForMessageRequestComponents$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ContainerComponentForMessageRequestComponents' from JSON`,
  );
}

/** @internal */
export const ContainerComponentForMessageRequest$inboundSchema: z.ZodType<
  ContainerComponentForMessageRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.literal(1).optional(),
  accent_color: z.nullable(z.number().int()).optional(),
  components: z.array(
    z.union([
      ActionRowComponentForMessageRequest$inboundSchema,
      MediaGalleryComponentForMessageRequest$inboundSchema,
      TextDisplayComponentForMessageRequest$inboundSchema,
      FileComponentForMessageRequest$inboundSchema,
      SectionComponentForMessageRequest$inboundSchema,
      SeparatorComponentForMessageRequest$inboundSchema,
    ]),
  ),
  spoiler: z.nullable(z.boolean()).optional(),
}).transform((v) => {
  return remap$(v, {
    "accent_color": "accentColor",
  });
});

/** @internal */
export type ContainerComponentForMessageRequest$Outbound = {
  type: 1;
  accent_color?: number | null | undefined;
  components: Array<
    | ActionRowComponentForMessageRequest$Outbound
    | MediaGalleryComponentForMessageRequest$Outbound
    | TextDisplayComponentForMessageRequest$Outbound
    | FileComponentForMessageRequest$Outbound
    | SectionComponentForMessageRequest$Outbound
    | SeparatorComponentForMessageRequest$Outbound
  >;
  spoiler?: boolean | null | undefined;
};

/** @internal */
export const ContainerComponentForMessageRequest$outboundSchema: z.ZodType<
  ContainerComponentForMessageRequest$Outbound,
  z.ZodTypeDef,
  ContainerComponentForMessageRequest
> = z.object({
  type: z.literal(1).default(1 as const),
  accentColor: z.nullable(z.number().int()).optional(),
  components: z.array(
    z.union([
      ActionRowComponentForMessageRequest$outboundSchema,
      MediaGalleryComponentForMessageRequest$outboundSchema,
      TextDisplayComponentForMessageRequest$outboundSchema,
      FileComponentForMessageRequest$outboundSchema,
      SectionComponentForMessageRequest$outboundSchema,
      SeparatorComponentForMessageRequest$outboundSchema,
    ]),
  ),
  spoiler: z.nullable(z.boolean()).optional(),
}).transform((v) => {
  return remap$(v, {
    accentColor: "accent_color",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ContainerComponentForMessageRequest$ {
  /** @deprecated use `ContainerComponentForMessageRequest$inboundSchema` instead. */
  export const inboundSchema =
    ContainerComponentForMessageRequest$inboundSchema;
  /** @deprecated use `ContainerComponentForMessageRequest$outboundSchema` instead. */
  export const outboundSchema =
    ContainerComponentForMessageRequest$outboundSchema;
  /** @deprecated use `ContainerComponentForMessageRequest$Outbound` instead. */
  export type Outbound = ContainerComponentForMessageRequest$Outbound;
}

export function containerComponentForMessageRequestToJSON(
  containerComponentForMessageRequest: ContainerComponentForMessageRequest,
): string {
  return JSON.stringify(
    ContainerComponentForMessageRequest$outboundSchema.parse(
      containerComponentForMessageRequest,
    ),
  );
}

export function containerComponentForMessageRequestFromJSON(
  jsonString: string,
): SafeParseResult<ContainerComponentForMessageRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ContainerComponentForMessageRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ContainerComponentForMessageRequest' from JSON`,
  );
}
