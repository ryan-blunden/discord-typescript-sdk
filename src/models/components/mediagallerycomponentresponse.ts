/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  MediaGalleryItemResponse,
  MediaGalleryItemResponse$inboundSchema,
  MediaGalleryItemResponse$Outbound,
  MediaGalleryItemResponse$outboundSchema,
} from "./mediagalleryitemresponse.js";

export type MediaGalleryComponentResponse = {
  type?: 1 | undefined;
  id: number;
  items: Array<MediaGalleryItemResponse>;
};

/** @internal */
export const MediaGalleryComponentResponse$inboundSchema: z.ZodType<
  MediaGalleryComponentResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.literal(1).optional(),
  id: z.number().int(),
  items: z.array(MediaGalleryItemResponse$inboundSchema),
});

/** @internal */
export type MediaGalleryComponentResponse$Outbound = {
  type: 1;
  id: number;
  items: Array<MediaGalleryItemResponse$Outbound>;
};

/** @internal */
export const MediaGalleryComponentResponse$outboundSchema: z.ZodType<
  MediaGalleryComponentResponse$Outbound,
  z.ZodTypeDef,
  MediaGalleryComponentResponse
> = z.object({
  type: z.literal(1).default(1 as const),
  id: z.number().int(),
  items: z.array(MediaGalleryItemResponse$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MediaGalleryComponentResponse$ {
  /** @deprecated use `MediaGalleryComponentResponse$inboundSchema` instead. */
  export const inboundSchema = MediaGalleryComponentResponse$inboundSchema;
  /** @deprecated use `MediaGalleryComponentResponse$outboundSchema` instead. */
  export const outboundSchema = MediaGalleryComponentResponse$outboundSchema;
  /** @deprecated use `MediaGalleryComponentResponse$Outbound` instead. */
  export type Outbound = MediaGalleryComponentResponse$Outbound;
}

export function mediaGalleryComponentResponseToJSON(
  mediaGalleryComponentResponse: MediaGalleryComponentResponse,
): string {
  return JSON.stringify(
    MediaGalleryComponentResponse$outboundSchema.parse(
      mediaGalleryComponentResponse,
    ),
  );
}

export function mediaGalleryComponentResponseFromJSON(
  jsonString: string,
): SafeParseResult<MediaGalleryComponentResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MediaGalleryComponentResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MediaGalleryComponentResponse' from JSON`,
  );
}
