/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  UnfurledMediaRequest,
  UnfurledMediaRequest$inboundSchema,
  UnfurledMediaRequest$Outbound,
  UnfurledMediaRequest$outboundSchema,
} from "./unfurledmediarequest.js";

export type MediaGalleryItemRequest = {
  description?: string | null | undefined;
  spoiler?: boolean | null | undefined;
  media: UnfurledMediaRequest;
};

/** @internal */
export const MediaGalleryItemRequest$inboundSchema: z.ZodType<
  MediaGalleryItemRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  description: z.nullable(z.string()).optional(),
  spoiler: z.nullable(z.boolean()).optional(),
  media: UnfurledMediaRequest$inboundSchema,
});

/** @internal */
export type MediaGalleryItemRequest$Outbound = {
  description?: string | null | undefined;
  spoiler?: boolean | null | undefined;
  media: UnfurledMediaRequest$Outbound;
};

/** @internal */
export const MediaGalleryItemRequest$outboundSchema: z.ZodType<
  MediaGalleryItemRequest$Outbound,
  z.ZodTypeDef,
  MediaGalleryItemRequest
> = z.object({
  description: z.nullable(z.string()).optional(),
  spoiler: z.nullable(z.boolean()).optional(),
  media: UnfurledMediaRequest$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MediaGalleryItemRequest$ {
  /** @deprecated use `MediaGalleryItemRequest$inboundSchema` instead. */
  export const inboundSchema = MediaGalleryItemRequest$inboundSchema;
  /** @deprecated use `MediaGalleryItemRequest$outboundSchema` instead. */
  export const outboundSchema = MediaGalleryItemRequest$outboundSchema;
  /** @deprecated use `MediaGalleryItemRequest$Outbound` instead. */
  export type Outbound = MediaGalleryItemRequest$Outbound;
}

export function mediaGalleryItemRequestToJSON(
  mediaGalleryItemRequest: MediaGalleryItemRequest,
): string {
  return JSON.stringify(
    MediaGalleryItemRequest$outboundSchema.parse(mediaGalleryItemRequest),
  );
}

export function mediaGalleryItemRequestFromJSON(
  jsonString: string,
): SafeParseResult<MediaGalleryItemRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MediaGalleryItemRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MediaGalleryItemRequest' from JSON`,
  );
}
