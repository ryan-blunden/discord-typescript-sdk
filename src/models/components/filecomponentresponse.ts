/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  UnfurledMediaResponse,
  UnfurledMediaResponse$inboundSchema,
  UnfurledMediaResponse$Outbound,
  UnfurledMediaResponse$outboundSchema,
} from "./unfurledmediaresponse.js";

export type FileComponentResponse = {
  type?: 1 | undefined;
  id: number;
  file: UnfurledMediaResponse;
  name?: string | null | undefined;
  size?: number | null | undefined;
  spoiler: boolean;
};

/** @internal */
export const FileComponentResponse$inboundSchema: z.ZodType<
  FileComponentResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.literal(1).optional(),
  id: z.number().int(),
  file: UnfurledMediaResponse$inboundSchema,
  name: z.nullable(z.string()).optional(),
  size: z.nullable(z.number().int()).optional(),
  spoiler: z.boolean(),
});

/** @internal */
export type FileComponentResponse$Outbound = {
  type: 1;
  id: number;
  file: UnfurledMediaResponse$Outbound;
  name?: string | null | undefined;
  size?: number | null | undefined;
  spoiler: boolean;
};

/** @internal */
export const FileComponentResponse$outboundSchema: z.ZodType<
  FileComponentResponse$Outbound,
  z.ZodTypeDef,
  FileComponentResponse
> = z.object({
  type: z.literal(1).default(1 as const),
  id: z.number().int(),
  file: UnfurledMediaResponse$outboundSchema,
  name: z.nullable(z.string()).optional(),
  size: z.nullable(z.number().int()).optional(),
  spoiler: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FileComponentResponse$ {
  /** @deprecated use `FileComponentResponse$inboundSchema` instead. */
  export const inboundSchema = FileComponentResponse$inboundSchema;
  /** @deprecated use `FileComponentResponse$outboundSchema` instead. */
  export const outboundSchema = FileComponentResponse$outboundSchema;
  /** @deprecated use `FileComponentResponse$Outbound` instead. */
  export type Outbound = FileComponentResponse$Outbound;
}

export function fileComponentResponseToJSON(
  fileComponentResponse: FileComponentResponse,
): string {
  return JSON.stringify(
    FileComponentResponse$outboundSchema.parse(fileComponentResponse),
  );
}

export function fileComponentResponseFromJSON(
  jsonString: string,
): SafeParseResult<FileComponentResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FileComponentResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FileComponentResponse' from JSON`,
  );
}
