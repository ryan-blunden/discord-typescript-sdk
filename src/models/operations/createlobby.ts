/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateLobbyRequestBody = {
  idleTimeoutSeconds?: number | null | undefined;
  members?: Array<components.LobbyMemberRequest> | null | undefined;
  metadata?: { [k: string]: string } | null | undefined;
};

/** @internal */
export const CreateLobbyRequestBody$inboundSchema: z.ZodType<
  CreateLobbyRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  idle_timeout_seconds: z.nullable(z.number().int()).optional(),
  members: z.nullable(z.array(components.LobbyMemberRequest$inboundSchema))
    .optional(),
  metadata: z.nullable(z.record(z.string())).optional(),
}).transform((v) => {
  return remap$(v, {
    "idle_timeout_seconds": "idleTimeoutSeconds",
  });
});

/** @internal */
export type CreateLobbyRequestBody$Outbound = {
  idle_timeout_seconds?: number | null | undefined;
  members?: Array<components.LobbyMemberRequest$Outbound> | null | undefined;
  metadata?: { [k: string]: string } | null | undefined;
};

/** @internal */
export const CreateLobbyRequestBody$outboundSchema: z.ZodType<
  CreateLobbyRequestBody$Outbound,
  z.ZodTypeDef,
  CreateLobbyRequestBody
> = z.object({
  idleTimeoutSeconds: z.nullable(z.number().int()).optional(),
  members: z.nullable(z.array(components.LobbyMemberRequest$outboundSchema))
    .optional(),
  metadata: z.nullable(z.record(z.string())).optional(),
}).transform((v) => {
  return remap$(v, {
    idleTimeoutSeconds: "idle_timeout_seconds",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateLobbyRequestBody$ {
  /** @deprecated use `CreateLobbyRequestBody$inboundSchema` instead. */
  export const inboundSchema = CreateLobbyRequestBody$inboundSchema;
  /** @deprecated use `CreateLobbyRequestBody$outboundSchema` instead. */
  export const outboundSchema = CreateLobbyRequestBody$outboundSchema;
  /** @deprecated use `CreateLobbyRequestBody$Outbound` instead. */
  export type Outbound = CreateLobbyRequestBody$Outbound;
}

export function createLobbyRequestBodyToJSON(
  createLobbyRequestBody: CreateLobbyRequestBody,
): string {
  return JSON.stringify(
    CreateLobbyRequestBody$outboundSchema.parse(createLobbyRequestBody),
  );
}

export function createLobbyRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<CreateLobbyRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateLobbyRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateLobbyRequestBody' from JSON`,
  );
}
