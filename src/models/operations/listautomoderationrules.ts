/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ListAutoModerationRulesRequest = {
  guildId: string;
};

export type ListAutoModerationRulesResponseBody =
  | components.DefaultKeywordRuleResponse
  | components.KeywordRuleResponse
  | components.MLSpamRuleResponse
  | components.MentionSpamRuleResponse
  | components.SpamLinkRuleResponse;

/** @internal */
export const ListAutoModerationRulesRequest$inboundSchema: z.ZodType<
  ListAutoModerationRulesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  guild_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "guild_id": "guildId",
  });
});

/** @internal */
export type ListAutoModerationRulesRequest$Outbound = {
  guild_id: string;
};

/** @internal */
export const ListAutoModerationRulesRequest$outboundSchema: z.ZodType<
  ListAutoModerationRulesRequest$Outbound,
  z.ZodTypeDef,
  ListAutoModerationRulesRequest
> = z.object({
  guildId: z.string(),
}).transform((v) => {
  return remap$(v, {
    guildId: "guild_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAutoModerationRulesRequest$ {
  /** @deprecated use `ListAutoModerationRulesRequest$inboundSchema` instead. */
  export const inboundSchema = ListAutoModerationRulesRequest$inboundSchema;
  /** @deprecated use `ListAutoModerationRulesRequest$outboundSchema` instead. */
  export const outboundSchema = ListAutoModerationRulesRequest$outboundSchema;
  /** @deprecated use `ListAutoModerationRulesRequest$Outbound` instead. */
  export type Outbound = ListAutoModerationRulesRequest$Outbound;
}

export function listAutoModerationRulesRequestToJSON(
  listAutoModerationRulesRequest: ListAutoModerationRulesRequest,
): string {
  return JSON.stringify(
    ListAutoModerationRulesRequest$outboundSchema.parse(
      listAutoModerationRulesRequest,
    ),
  );
}

export function listAutoModerationRulesRequestFromJSON(
  jsonString: string,
): SafeParseResult<ListAutoModerationRulesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListAutoModerationRulesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListAutoModerationRulesRequest' from JSON`,
  );
}

/** @internal */
export const ListAutoModerationRulesResponseBody$inboundSchema: z.ZodType<
  ListAutoModerationRulesResponseBody,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.DefaultKeywordRuleResponse$inboundSchema,
  components.KeywordRuleResponse$inboundSchema,
  components.MLSpamRuleResponse$inboundSchema,
  components.MentionSpamRuleResponse$inboundSchema,
  components.SpamLinkRuleResponse$inboundSchema,
]);

/** @internal */
export type ListAutoModerationRulesResponseBody$Outbound =
  | components.DefaultKeywordRuleResponse$Outbound
  | components.KeywordRuleResponse$Outbound
  | components.MLSpamRuleResponse$Outbound
  | components.MentionSpamRuleResponse$Outbound
  | components.SpamLinkRuleResponse$Outbound;

/** @internal */
export const ListAutoModerationRulesResponseBody$outboundSchema: z.ZodType<
  ListAutoModerationRulesResponseBody$Outbound,
  z.ZodTypeDef,
  ListAutoModerationRulesResponseBody
> = z.union([
  components.DefaultKeywordRuleResponse$outboundSchema,
  components.KeywordRuleResponse$outboundSchema,
  components.MLSpamRuleResponse$outboundSchema,
  components.MentionSpamRuleResponse$outboundSchema,
  components.SpamLinkRuleResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAutoModerationRulesResponseBody$ {
  /** @deprecated use `ListAutoModerationRulesResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ListAutoModerationRulesResponseBody$inboundSchema;
  /** @deprecated use `ListAutoModerationRulesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ListAutoModerationRulesResponseBody$outboundSchema;
  /** @deprecated use `ListAutoModerationRulesResponseBody$Outbound` instead. */
  export type Outbound = ListAutoModerationRulesResponseBody$Outbound;
}

export function listAutoModerationRulesResponseBodyToJSON(
  listAutoModerationRulesResponseBody: ListAutoModerationRulesResponseBody,
): string {
  return JSON.stringify(
    ListAutoModerationRulesResponseBody$outboundSchema.parse(
      listAutoModerationRulesResponseBody,
    ),
  );
}

export function listAutoModerationRulesResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<ListAutoModerationRulesResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ListAutoModerationRulesResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListAutoModerationRulesResponseBody' from JSON`,
  );
}
