/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { pollsExpire } from "../../funcs/pollsExpire.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.PollExpireRequest$inboundSchema,
};

export const tool$pollsExpire: ToolDefinition<typeof args> = {
  name: "polls-expire",
  description:
    `Immediately ends the poll. You cannot end polls from other users. Returns a message object. Fires a Message Update Gateway event.`,
  scopes: ["polls", "write"],
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await pollsExpire(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
