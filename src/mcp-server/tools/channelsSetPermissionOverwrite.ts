/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { channelsSetPermissionOverwrite } from "../../funcs/channelsSetPermissionOverwrite.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.SetChannelPermissionOverwriteRequest$inboundSchema,
};

export const tool$channelsSetPermissionOverwrite: ToolDefinition<typeof args> =
  {
    name: "channels-set-permission-overwrite",
    description:
      `Edit the channel permission overwrites for a user or role in a channel. Only usable for guild channels. Requires the MANAGE_ROLES permission. Returns a 204 empty response on success. Fires a Channel Update Gateway event.`,
    scopes: ["channels", "write"],
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] = await channelsSetPermissionOverwrite(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      return formatResult(void 0, apiCall);
    },
  };
