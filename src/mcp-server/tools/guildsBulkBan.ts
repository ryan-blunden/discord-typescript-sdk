/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { guildsBulkBan } from "../../funcs/guildsBulkBan.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.BulkBanUsersFromGuildRequest$inboundSchema,
};

export const tool$guildsBulkBan: ToolDefinition<typeof args> = {
  name: "guilds-bulk-ban",
  description:
    `Ban up to 200 users from a guild, and optionally delete previous messages sent by the banned users. Requires both the BAN_MEMBERS and MANAGE_GUILD permissions. Returns a 200 response on success, including the fields banned_users with the IDs of the banned users and failed_users with IDs that could not be banned or were already banned.`,
  scopes: ["guilds", "write"],
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await guildsBulkBan(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
